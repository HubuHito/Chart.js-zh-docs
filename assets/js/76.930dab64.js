(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{602:function(t,a,s){"use strict";s.r(a);var n=s(5),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("图表行为配置，也可以配置样式、字体和图例等。")]),t._v(" "),s("h2",{attrs:{id:"全局配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局配置"}},[t._v("#")]),t._v(" 全局配置")]),t._v(" "),s("p",[t._v("Chart.js 1.0中引入了此概念，目的是保持配置不重复"),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Don%27t_repeat_yourself",target:"_blank",rel:"noopener noreferrer"}},[t._v("DRY"),s("OutboundLink")],1),t._v("，并允许更改全局的图表默认配置，从而避免为每个图表实例指定配置，或为特定图表类型指定默认配置。")]),t._v(" "),s("p",[t._v("Chart.js 会把全局配置项合并到不同图表上，并根据合并策略适当的修改默认值。更改全局配置也会使所有图表配置修改，这样你可以自定义自己的风格图表。可通过"),s("code",[t._v("Chart.defaults")]),t._v("设置全局配置，每种图表的默认值会在后面文档中说明。")]),t._v(" "),s("p",[t._v("如：设置所有图表的默认悬浮模式为 'nearest'：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("Chart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("defaults"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hover"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nearest'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没有配置项设置悬浮模式，悬浮模式默认为 'nearest'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" chartHoverModeNearest "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Chart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'line'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" data\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置中有覆盖全局模式的配置，悬浮模式为 'index'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" chartDifferentHoverMode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Chart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'line'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    options"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        hover"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 覆盖全局配置")]),t._v("\n            mode"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'index'")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"数据集配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据集配置"}},[t._v("#")]),t._v(" 数据集配置")]),t._v(" "),s("p",[t._v("数据集中也可配置图表相关配置项（与数据集相关的），并且优先级最高，它会覆盖图表配置或者全局的配置项，具体优先级如下：")]),t._v(" "),s("ul",[s("li",[t._v("数据集配置：dataset.*")]),t._v(" "),s("li",[t._v("图表配置：options.datasets[type].*")]),t._v(" "),s("li",[t._v("全局配置： Chart.defaults.controllers[type].datasets.*")])]),t._v(" "),s("p",[t._v("上面 "),s("code",[t._v("type")]),t._v(" 表示数据集类型（line、bar等）")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("数据集的配置项，优先于"),s("code",[t._v("options.elements")]),t._v("的配置")])]),t._v(" "),s("p",[t._v("如：设置所有折线相关的数据集默认隐藏"),s("code",[t._v("showLine: false")]),t._v("，然后通过每个数据集的配置覆盖全局配置：")]),t._v(" "),s("chart-editor",{attrs:{code:"//<block:配置>\nChart.defaults.controllers.line.showLine = false; // 所有折线数据集默认不显示\n\n// 只有第三个数据集会绘制直线，第四个数据集为点\nconst config = {\n  type: 'line',\n  data: {\n      datasets: [{\n          data: [0, 0],\n      }, {\n          data: [0, 1]\n      }, {\n          data: [1, 0],\n          showLine: true // 覆盖showLine的值\n      }, {\n          type: 'scatter', // 折线数据集不会影响scatter数据集\n          data: [1, 1]\n      }]\n  }\n};\n//</block:配置>\n\nmodule.exports = {\n  config\n}\n"}})],1)}),[],!1,null,null,null);a.default=e.exports}}]);